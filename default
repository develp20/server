# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name flip.wtf;

    client_max_body_size 10M;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/flip.wtf/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/flip.wtf/privkey.pem;

    # Include the SSL configuration from cipherli.st
    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:5000/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /.well-known/acme-challenge {
      root /var/letsencrypt;
    }
}

# HTTPS - proxy all api requests to the path

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name api.flip.wtf;

  client_max_body_size 10M;
 
  location / {
    proxy_pass http://localhost:5001/api$request_uri;
    proxy_set_header Host flip.wtf;
  }
}

# HTTPS - proxy all live requests to the path

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name live.flip.wtf;
 
  location / {
    proxy_pass http://localhost:4000/live$request_uri;
    # proxy_set_header Host flip.wtf;
  }
}

# Proxy download.flip.wtf requests to the thingy

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name download.flip.wtf;

  location / {
    proxy_pass http://localhost:5000/download;
    proxy_set_header Host flip.wtf;
  }
}
